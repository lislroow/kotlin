plugins {
  id 'java'
  id 'maven-publish'
  id 'org.jetbrains.kotlin.jvm' version '2.0.20'
}

ext {
  dependencyRepos = {
    mavenCentral()
    //maven { url = uri('https://nexus.mgkim.net/repository/maven-public/') 
    mavenLocal()
  }
  
  java_version = 17

  kotlin_version = '2.0.20'

  spring_boot_version = '3.3.3'
  spring_cloud_version = '2023.0.3'
  mybatis_version = '3.0.3'
  
  lombok_version = '1.18.32'
  lombok_mapstruct_binding_version = '0.2.0'
  mapstruct_version = '1.5.5.Final'
  modelmapper_version = '3.2.0'
  swagger_version = '1.6.14'
  jasypt_spring_boot_version = '3.0.5'
  log4jdbc_version = '1.16'
}

group = 'spring.app'
version = '0.1-SNAPSHOT'

repositories dependencyRepos

java {
  sourceCompatibility = java_version.toString()
  targetCompatibility = java_version.toString()
}

dependencies {
  constraints {
    //platform "org.springframework.boot:spring-boot-dependencies:${spring_boot_version}"
    //platform "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}"
  }
  platform "org.jetbrains.kotlin:kotlin-bom:${kotlin_version}"
}

//task sourceJar(type: Jar) {
//  from sourceSets.main.allJava
//  archiveClassifier = 'sources'
//}
//
//tasks.withType(Javadoc) {
//  options.encoding = 'utf-8'
//}
//
//tasks.withType(JavaCompile) {
//  options.encoding = 'utf-8'
//}
//
//tasks.named("compileJava") {
//  dependsOn tasks.named("compileKotlin")
//}

dependencies {
  //implementation platform("org.springframework.boot:spring-boot-dependencies:${spring_boot_version}")
  //implementation platform("org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}")
  
  //compileOnly "org.projectlombok:lombok:${lombok_version}"
  //annotationProcessor "org.projectlombok:lombok:${lombok_version}"
  
  //implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
  //implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"
  //implementation "org.slf4j:slf4j-api"
  //implementation "ch.qos.logback:logback-classic"
  //implementation "org.mapstruct:mapstruct:${mapstruct_version}"
  //implementation "org.mapstruct:mapstruct-processor:${mapstruct_version}"
  //implementation "org.modelmapper:modelmapper:${modelmapper_version}"
  //implementation "com.fasterxml.jackson.core:jackson-databind"
  //
  //testImplementation 'org.springframework.boot:spring-boot-starter-test'
  //testImplementation 'junit:junit'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'org.jetbrains.kotlin.jvm'
  
  java {
    sourceCompatibility = java_version.toString()
    targetCompatibility = java_version.toString()
  }
  
  repositories dependencyRepos
  
  dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
  }
  
  tasks.named("compileJava") {
    dependsOn tasks.named("compileKotlin")
  }
}